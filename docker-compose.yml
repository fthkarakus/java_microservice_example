version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_MULTIPLE_DATABASES=user_db,content_db,comment_db,analytics_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init-multiple-databases.sh:/docker-entrypoint-initdb.d/init-multiple-databases.sh
    networks:
      - microservices-network
  service-registry:
    build: ./service-registry
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-service:8888
    networks:
      - microservices-network

  config-service:
    build: ./config-service
    ports:
      - "8888:8888"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_CLOUD_CONFIG_SERVER_GIT_URI=https://github.com/yourusername/config-repo
      - SPRING_CLOUD_CONFIG_SERVER_GIT_DEFAULT_LABEL=main
      - SPRING_CLOUD_CONFIG_SERVER_GIT_SEARCH_PATHS=services/*
    depends_on:
      - service-registry
    networks:
      - microservices-network

  user-service:
    build: ./user-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-service:8888
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/user_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - JWT_SECRET_KEY=NWY3ZDEyYTg4ZjQ5NGZmZmExYjFiYjFiMWJiMWJiMWI=
      - JWT_EXPIRATION_TIME=86400000
      - API_URL=http://localhost
      - API_PORT=8060
    depends_on:
      - service-registry
      - config-service
      - postgres
    networks:
      - microservices-network

  content-service:
    build: ./content-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-service:8888
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/content_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
    depends_on:
      - service-registry
      - config-service
      - postgres
      - kafka
    networks:
      - microservices-network

  comment-service:
    build: ./comment-service
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-service:8888
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/comment_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
    depends_on:
      - service-registry
      - config-service
      - postgres
      - kafka
    networks:
      - microservices-network

  analytics-service:
    build: ./analytics-service
    ports:
      - "8084:8084"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-service:8888
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/analytics_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
    depends_on:
      - service-registry
      - config-service
      - postgres
      - kafka
    networks:
      - microservices-network

  api-gateway:
    build: ./api-gateway
    ports:
      - "8060:8060"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-service:8888
    depends_on:
      - service-registry
      - config-service
      - user-service
      - content-service
      - comment-service
      - analytics-service
    networks:
      - microservices-network



  kafka:
    image: confluentinc/cp-kafka:7.5.1
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    depends_on:
      - zookeeper
    networks:
      - microservices-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.1
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    networks:
      - microservices-network

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    ports:
      - "9000:9000"
    environment:
      - KAFKA_BROKERCONNECT=kafka:9092
    depends_on:
      - kafka
    networks:
      - microservices-network

volumes:
  postgres_data:

networks:
  microservices-network:
    driver: bridge 